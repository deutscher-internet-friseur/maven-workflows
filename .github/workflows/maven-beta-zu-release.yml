name: Maven Beta zu Release

on: 
  workflow_call:
    secrets:
      ARTIFACTORY_USER:
        required: true
      ARTIFACTORY_PASSWORD:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Konfigure JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven

    - name: Erzeuge Maven settings.xml
      # You may pin to the exact commit or the version.
      # uses: s4u/maven-settings-action@902651b0f8e6e470107a6eee701f30f4f0986fbe
      uses: s4u/maven-settings-action@v2.4.1
      with:
        # servers definition in json array, eg: [{"id": "serverId", "username": "username", "password": "password"}]
        servers: '[{"id": "artifactory", "username": "${env.MAVEN_USERNAME}", "password": "${env.MAVEN_PASSWORD}"}]'
        # mirrors definition in json array, eg: [{"id": "id", "name": "name", "mirrorOf": "mirrorOf", "url": "url"}]
        mirrors: '[{"id": "other", "name": "other", "mirrorOf": "!central", "url": "https://internetfriseur.jfrog.io/artifactory/default-maven-virtual"}]'     
      
    - name: Bestimme aktuellen Branch
      id: branch-name
      uses: tj-actions/branch-names@v5.1
      
    - name: Running on the default branch (i.e non tag based branch).
      if: steps.branch-name.outputs.is_tag == 'false'
      run: |
        echo "Kein geeigneter Tag"
        exit 1
      
    - name: Bestimme aktuelle Version
      run: |
        echo VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout ) >> $GITHUB_ENV
        
       
    - name: Bestimme verschiedene Umgebungsvariablen
      run: |
        echo RELEASE_VERSION=$( echo $VERSION | perl -pe 's/-BETA//') >> $GITHUB_ENV    
     
    - name: Konfiguriere Git
      run: |
        git --version
        git config user.name "DevOps-Bot"
        git config user.email "<>"
        git status
           
    - name: Versionsnummer auf Release-Version ändern
      run: |
        mvn -B versions:set -DnewVersion=$RELEASE_VERSION
        
    - name: Tag der Release-Version
      run: |
        git tag -a "$RELEASE_VERSION" -m "Release von $RELEASE_VERSION"
         
    - name: Nach Artifactory deployen
      run: mvn -B -T 4 deploy -DaltDeploymentRepository=artifactory::default::https://internetfriseur.jfrog.io/artifactory/default-maven-virtual
      env:
         MAVEN_USERNAME: ${{ secrets.ARTIFACTORY_USER }}
         MAVEN_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}

    - name: Push der nächsten Entwicklungsversion
      run: |
        git push origin "$RELEASE_VERSION"
